keras:::keras_version()
library(tensorflow)
library(keras)
keras:::keras_version()
install_tensorflow(conda="tf-keras",require=T)
use_condaenv('tf-keras', required = T)
library(keras)
install_keras()
library(keras)
install_keras()
library(tensorflow)
library(keras)
data <- data_mnist()
keras:::keras_version()
library(tensorflow)
library(keras)
data <- data_mnist()
use_condaenv('tf-keras', required = T)
tensorflow::tf_config()
data <- data_mnist()
data <- data_mnist()
library(keras)
library(tensorflow)
library(keras)
data <- data_mnist()
model<-keras_model_sequential()
model%>%
layer_dense(units=256, activation='relu', input_shape= c(784))
summary(model)
data <- data_mnist()
library(keras)
data <- data_mnist()
implementation()
keras:::keras_version()
backend()$backend()
model<-keras_model_sequential()
model%>%
layer_dense(units=256, activation='relu', input_shape= c(784))
library(keras)
library(readr)
library(stringr)
library(purrr)
library(purrr)
library(tokenizers)
install.packages("purrr")
data <- dataset_mnist()
library(purrr)
library(tokenizers)
library(keras)
batch_size <- 128
num_classes <- 10
epochs <- 2
img_rows <- 28
img_cols <- 28
mnist <- dataset_mnist()
mnist
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
x_train <- array_reshape(x_train, c(nrow(x_train), img_rows, img_cols, 1))
x_test <- array_reshape(x_test, c(nrow(x_test), img_rows, img_cols, 1))
input_shape <- c(img_rows, img_cols, 1)
x_train <- x_train / 255
x_test <- x_test / 255
?array_reshape
x_train <- array_reshape(x_train, c(nrow(x_train), img_rows, img_cols, 1))
input_shape <- c(img_rows, img_cols, 1)
x_train <- array_reshape(x_train, c(nrow(x_train), img_rows, img_cols, 1))
x_test <- array_reshape(x_test, c(nrow(x_test), img_rows, img_cols, 1))
input_shape <- c(img_rows, img_cols, 1)
x_train <- x_train / 255
x_test <- x_test / 255
cat('x_train_shape:', dim(x_train), '\n')
cat(nrow(x_train), 'train samples\n')
cat(nrow(x_test), 'test samples\n')
y_train <- to_categorical(y_train, num_classes)
y_test <- to_categorical(y_test, num_classes)
model <- keras_model_sequential()
model %>%
layer_conv_2d(filters = 32, kernel_size = c(3,3), activation = 'relu',
input_shape = input_shape) %>%
layer_conv_2d(filters = 64, kernel_size = c(3,3), activation = 'relu') %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_dropout(rate = 0.25) %>%
layer_flatten() %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.5) %>%
layer_dense(units = num_classes, activation = 'softmax')
model %>% compile(
loss = loss_categorical_crossentropy,
optimizer = optimizer_adadelta(),
metrics = c('accuracy')
)
model %>% fit(
x_train, y_train,
batch_size = batch_size,
epochs = epochs,
verbose = 1,
validation_data = list(x_test, y_test)
)
show.digit <- function(i, which.matrix="test"){
if(which.matrix=="test"){
m <- testData
mL <- testLabels
}
if(which.matrix=="train"){
m <- trainData
mL <- trainLabels
}
image(matrix(m[i,], nrow=28)[,28:1],
col=gray(12:1/12), # color scheme for visualizing
xlab=which(mL[i,]==1)-1, # extract the label from the label matrix
xaxt='n',yaxt='n' # remove x and y axes.
)
}
testData[10,]
show.digit(10, which.matrix="test")
load("C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane/n02691156_58.jpg")
install.packages(jpeg)
install.packages("jpeg")
library(jpeg)
path <- system.file('C:\Users\Kushin\Desktop\Modelling Project\256x256\photo\tx_000000000000\airplane',package='imager')
path <- system.file('256x256\photo\tx_000000000000\airplane',package='imager')
?system.file
path <- system.file('airplane/n02691156_6382.jpg',package='imager')
load.image(path)
install.packages("imager")
library(imager)
load.image(path)
path <- system.file('airplane/n02691156_6382.jpg',package='imager')
load.image(path)
path <- system.file('256x256\photo\tx_000000000000\airplane/n02691156_6382.jpg',package='imager')
path <- system.file('256x256/photo/tx_000000000000/airplane/n02691156_6382.jpg',package='imager')
load.image(path)
path <- system.file('C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplanen02691156_6382.jpg',package='imager')
load.image(path)
library(EBImage)
readJPEG('n02691156_58.jpg')
a<-readJPEG('n02691156_58.jpg')
a<-readJPEG('n02691156_58.jpg')
a<-readJPEG('n02691156_58.jpg')
a<-readJPEG('n02691156_58.jpg')
a
b<-readJPEG('256x256/photo/tx_000000000000/airplane')
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_2173.jpg')
b
path <- list.files('256x256/photo/tx_00000000000/airplane)
load.image(path)
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_2173.jpg')
b
path <- list.files('256x256/photo/tx_00000000000/airplane')
path
path <- list.files('256x256/photo/tx_00000000000/airplane')
path
path <- list.files(path = '256x256/photo/tx_00000000000/airplane', pattern = ".jpg")
path
path <- list.files(path = '256x256/photo/tx_00000000000/airplane', pattern = "*.jpg")
path
path <- list.files(path = '256x256/photo/tx_00000000000/airplane', pattern = "*.jpg")
file
files <- list.files(path = '256x256/photo/tx_00000000000/airplane', pattern = "*.jpg")
file
files
path = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
path = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
files <- list.files(path = path, pattern = "*.jpg")
files
files[1]
b
picstring<- rep(0,50)
picstring<- as.array(rep(0,50))
picstring<- as.array(rep(0,50))
picstring<- as.array(rep(0,50))
for(i in 1:50){
picstring[i]<- readJPEG(files[i])
}
library(jpeg)
picstring<- as.array(rep(0,50))
for(i in 1:50){
picstring[i]<- readJPEG(files[i])
}
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_2173.jpg')
path = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
folder= "256x256/photo/tx_000000000000/airplane/"
files <- list.files(path = path, pattern = "*.jpg")
files
picstring<- as.array(rep(0,50))
for(i in 1:50){
picstring[i]<- readJPEG(paste(folder,files[i]))
}
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_2173.jpg')
picstring<- as.array(rep(0,50))
for(i in 1:50){
picstring[i]<- readJPEG(paste(folder,files[i], sep=""))
}
picstring
library(jpeg)
path = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
folder= "256x256/photo/tx_000000000000/airplane/"
files <- list.files(path = path, pattern = "*.jpg")
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_2173.jpg')
for(i in 1:50){
picstring[i]<- readJPEG(paste(folder,files[i], sep=""))
}
picstring<- array()
picstring<- array()
for(i in 1:50){
picstring[i]<- picstring[i]+readJPEG(paste(folder,files[i], sep=""))
}
picstring
typeof(b)
picstring<- double()
picstring<- double()
for(i in 1:50){
picstring[i]<- picstring[i]+readJPEG(paste(folder,files[i], sep=""))
}
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_2173.jpg')
b
picstring<- as.raster(double())
for(i in 1:50){
picstring[i]<- picstring[i]+readJPEG(paste(folder,files[i], sep=""))
}
picstring
picstring<- as.raster(double())
picstring<- as.raster(double())
for(i in 1:50){
picstring[i]<- picstring + readJPEG(paste(folder,files[i], sep=""))
}
picstring<- matrix(nrow = 100, ncol = 65536)
for(i in 1:50){
picstring[i]<- picstring + readJPEG(paste(folder,files[i], sep=""))
}
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_58.jpg')
b
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_507.jpg')
picstring<- matrix(nrow = 3, ncol = 65536)
for(i in 1:50){
picstring[i,]<- picstring + readJPEG(paste(folder,files[i], sep=""))
}
View(picstring)
picstring<- array(0,c(256,256,3))
picstring<- array(rep(0,100),c(256,256,3))
picstring<- array(0,c(256,256,3,100))
picstring<- array(0,c(256,256,3,100))
for(i in 1:50){
picstring[,,,i]<- readJPEG(paste(folder,files[i], sep=""))
}
picstring
library(jpeg)
library(imager)
path = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
folder= "256x256/photo/tx_000000000000/airplane/"
files <- list.files(path = path, pattern = "*.jpg")
files
files[1]
load.image(path)
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_507.jpg')
b
image(b)
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_507.jpg')
image(b)
library(ReadImages)
install.packages("ReadImages")
library('ReadImages')
plot(b)
path = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
folder= "256x256/photo/tx_000000000000/airplane/"
files <- list.files(path = path, pattern = "*.jpg")
files
files[1]
load.image(path)
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_507.jpg')
plot(b)
View(b)
library(imager)
b2<-load.image(b)
b2<-load.image(b)
b<-readJPEG('256x256/photo/tx_000000000000/airplane/n02691156_507.jpg')
b<-load.image(path)
path = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
b<-load.image(path)
b<-load.image("256x256/photo/tx_000000000000/airplane/")
b<-load.image("256x256/photo/tx_000000000000/airplane/n02691156_507.jpg")
plot(b)
b[,,1]<- 0.21*b[,,1]
b[,,2]<-0.72*b[,,2]
b[,,3]<-0.07*b[,,3]
plot(b)
b[,,1]<- (b[,,1]+b[,,2]+b[,,3])/3
b[,,2]<-(b[,,1]+b[,,2]+b[,,3])/3
b[,,3]<-(b[,,1]+b[,,2]+b[,,3])/3
plot(b)
b<-grayscale(b)
plot(b)
b
writeJPEG(b, target = "Converted.jpeg", quality = 1)
b
b[]
b
b
plot(b)
writeJPEG(b, target = "Converted.jpeg", quality = 1)
library(jpeg)
library(imager)
path.image = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
folder= "256x256/photo/tx_000000000000/airplane/"
image.files <- list.files(path = path.image, pattern = "*.jpg")
image.files
path.sket = "C:/Users/Kushin/Desktop/Modelling Project/256x256/sketch/tx_000000000000/airplane"
sket.files.1<- list.files(path = path.sket, pattern = "*-1.png")
sket.files.2<- list.files(path = path.sket, pattern = "*-2.png")
sket.files.3<- list.files(path = path.sket, pattern = "*-3.png")
sket.files.4<- list.files(path = path.sket, pattern = "*-4.png")
sket.files.5<- list.files(path = path.sket, pattern = "*-5.png")
image.string<- array(0, c(256,256,1,3,15))
for(i in 1:15){
image.string[,,,,i]<- load.image(paste(image.folder,image.files[i], sep=""))
}
folder= "256x256/photo/tx_000000000000/airplane/"
folder.1="256x256/sketch/tx_000000000000/airplane"
image.string<- array(0, c(256,256,1,3,15))
for(i in 1:15){
image.string[,,,,i]<- load.image(paste(folder,image.files[i], sep=""))
}
image.string
sketch.string<- array(0,c(256,256,1,3,15,5))
for(i in 1:15){
sketch.string[,,,,i,1]<-load.image(paste(folder.1,sket.files.1[i],sep=""))
sketch.string[,,,,i,2]<-load.image(paste(folder.1,sket.files.2[i],sep=""))
sketch.string[,,,,i,3]<-load.image(paste(folder.1,sket.files.3[i],sep=""))
sketch.string[,,,,i,4]<-load.image(paste(folder.1,sket.files.4[i],sep=""))
sketch.string[,,,,i,5]<-load.image(paste(folder.1,sket.files.5[i],sep=""))
}
folder.1="256x256/sketch/tx_000000000000/airplane/"
sketch.string<- array(0,c(256,256,1,3,15,5))
for(i in 1:15){
sketch.string[,,,,i,1]<-load.image(paste(folder.1,sket.files.1[i],sep=""))
sketch.string[,,,,i,2]<-load.image(paste(folder.1,sket.files.2[i],sep=""))
sketch.string[,,,,i,3]<-load.image(paste(folder.1,sket.files.3[i],sep=""))
sketch.string[,,,,i,4]<-load.image(paste(folder.1,sket.files.4[i],sep=""))
sketch.string[,,,,i,5]<-load.image(paste(folder.1,sket.files.5[i],sep=""))
}
image(t(picstring[,,1,3,4]))
sketch.string
image.string<- array(0, c(256,256,1,3,15))
for(i in 1:15){
image.string[,,,,i]<- grayscale(load.image(paste(folder,image.files[i], sep="")))
}
image.string
image.string<- array(0, c(256,256,1,3,15))
for(i in 1:15){
image.string[,,,,i]<- grayscale(load.image(paste(folder,image.files[i], sep="")))
}
image.string
single.image<-grayscale(single.image)
single.image<-load.image("256x256/photo/tx_000000000000/airplane/n02691156_507.jpg")
plot(single.image)
single.sketch<-load.image("C:/Users/Kushin/Desktop/Modelling Project/256x256/sketch/tx_000000000000/airplane/n02691156_507-1.png")
single.sketch<-grayscale(single.sketch)
single.sketch
single.image<-grayscale(single.image)
single.image[]
single.image
single.image<-grayscale(single.image)
single.image
single.image[]
single.image<-load.image("256x256/photo/tx_000000000000/airplane/n02691156_507.jpg")
single.image
single.image[]
sketch.string[1,1,1,1,1]
sketch.string[1,1,1,1,1,1]
sketch.string[]
image(sketch.string[,,,,1,1])
single.sketch
image(single.sketch)
image(single.image)
image(single.sketch)
image(sketch.string[,,,,1,1])
image(t(picstring[,,1,3,4]))
image.string<- array(0, c(256,256,1,3,15))
image(single.image)
image(single.sketch)
image(single.image)
image(single.sketch)
image(single.image)
image(single.image[,,1,1])
image(single.sketch[,,1,1])
image(sketch.string[,,1,1,1,1])
single.sketch<-load.image("C:/Users/Kushin/Desktop/Modelling Project/256x256/sketch/tx_000000000000/airplane/n02691156_507-1.png")
single.image<-load.image("256x256/photo/tx_000000000000/airplane/n02691156_507.jpg")
single.image[]
single.image<-grayscale(single.image)
single.image[]
image(single.image[,,1,1])
image(single.image[,,,1])
plot(single.image)
single.image
single.image<-as.matrix(single.image)
View(single.image)
image(single.image)
single.image[]
single.image[]
single.image<-grayscale(single.image)
single.image<-grayscale(single.image)
library(jpeg)
library(imager)
path.image = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
path.sket = "C:/Users/Kushin/Desktop/Modelling Project/256x256/sketch/tx_000000000000/airplane"
folder= "256x256/photo/tx_000000000000/airplane/"
folder.1="256x256/sketch/tx_000000000000/airplane/"
image.files <- list.files(path = path.image, pattern = "*.jpg")
image.files
sket.files.1<- list.files(path = path.sket, pattern = "*-1.png")
sket.files.2<- list.files(path = path.sket, pattern = "*-2.png")
sket.files.3<- list.files(path = path.sket, pattern = "*-3.png")
sket.files.4<- list.files(path = path.sket, pattern = "*-4.png")
sket.files.5<- list.files(path = path.sket, pattern = "*-5.png")
single.image<-load.image("256x256/photo/tx_000000000000/airplane/n02691156_507.jpg")
single.image<-grayscale(single.image)
single.image[]
single.image[]
single.image
as.matrix(single.image[])
single.image<-as.matrix(single.image[])
View(single.image)
single.sketch<-as.matrix(single.sketch)
single.sketch
single.sketch<-grayscale(single.sketch)
single.image<-as.matrix(single.image[])
single.sketch<-as.matrix(single.sketch)
View(single.sketch)
View(single.image)
View(single.sketch)
path.image = "C:/Users/Kushin/Desktop/Modelling Project/256x256/photo/tx_000000000000/airplane"
path.sket = "C:/Users/Kushin/Desktop/Modelling Project/256x256/sketch/tx_000000000000/airplane"
folder= "256x256/photo/tx_000000000000/airplane/"
folder.1="256x256/sketch/tx_000000000000/airplane/"
image.files <- list.files(path = path.image, pattern = "*.jpg")
single.image<-load.image("256x256/photo/tx_000000000000/airplane/n02691156_507.jpg")
plot(single.image)
single.sketch<-load.image("C:/Users/Kushin/Desktop/Modelling Project/256x256/sketch/tx_000000000000/airplane/n02691156_507-1.png")
plot(single.sketch)
single.sketch<-grayscale(single.sketch)
single.image<-grayscale(single.image)
single.image<-as.matrix(single.image)
View(single.image)
single.sketch<-as.matrix(single.sketch)
View(single.sketch)
image.string<- array(0, c(256,256,1,3,15))
for(i in 1:15){
image.string[,,,,i]<- grayscale(load.image(paste(folder,image.files[i], sep="")))
}
image.string[,,1,1,2]
plot(image.string[,,1,1,2])
plot(as.cimg(image.string[,,1,1,2]))
tester<- as.matrix(image.string[,,,,2])
tester
View(tester)
tester<- image.string[,,,,2]
tester<-as.cimg(image.string[,,,,2])
tester<-as.cimg(image.string[,,1,1,2])
tester
plot(tester)
plot(tester)
tester<-as.matrix(tester)
View(tester)
image.string[,,1,1,]<-as.cimg(image.string[,,1,1,])
plot(image.string[,,1,1,5])
tester<-as.cimg(image.string[,,1,1,2])
tester<-as.matrix(tester)
plot(as.cimg(image.string[,,1,1,2]))
image.string[,,1,1,]<-as.matrix(image.string[,,1,1,])
image.string[,,1,1,]<-as.matrix(image.string[,,1,1,])
image.string[,,1]
image.string[,,1,1,2]
image.string<- array(0, c(256,256,1,3,15,5))
for(i in 1:15){
image.string[,,,,i,]<- grayscale(load.image(paste(folder,image.files[i], sep="")))
}
(as.cimg(image.string[,,1,1,7,1]))
plot(as.cimg(image.string[,,1,1,7,1]))
plot(as.cimg(image.string[,,1,1,7,2]))
plot(as.cimg(image.string[,,1,1,7,5]))
plot(as.cimg(image.string[,,1,1,8,5]))
plot(as.cimg(image.string[,,1,1,8,6]))
